########################################## python matrix multiplication ##########################################

import numpy as np
import jetson_emulator.inference as inference
import jetson_emulator.utils as utils

# Define matrices A and B
A = np.array([[1, 2, 3],
              [4, 5, 6]])

B = np.array([[7, 8],
              [9, 10],
              [11, 12]])

# Perform matrix multiplication
C = np.dot(A, B)

print("Matrix A:")
print(A)
print("\nMatrix B:")
print(B)
print("\nResult of matrix multiplication (A * B):")
print(C)


########################################## C++ matrix multiplication ##########################################

#include <iostream>
#include <vector>
#include "jetson_emulator/inference.h"
#include "jetson_emulator/utils.h"

int main() {
    // Define matrices A and B
    std::vector<std::vector<int>> A = {{1, 2, 3},
                                       {4, 5, 6}};
    
    std::vector<std::vector<int>> B = {{7, 8},
                                       {9, 10},
                                       {11, 12}};
    
    // Define matrix C to store the result
    std::vector<std::vector<int>> C(A.size(), std::vector<int>(B[0].size(), 0));

    // Perform matrix multiplication
    for (size_t i = 0; i < A.size(); ++i) {
        for (size_t j = 0; j < B[0].size(); ++j) {
            for (size_t k = 0; k < B.size(); ++k) {
                C[i][j] += A[i][k] * B[k][j];
            }
        }
    }

    // Print the result
    std::cout << "Result of matrix multiplication (A * B):\n";
    for (size_t i = 0; i < C.size(); ++i) {
        for (size_t j = 0; j < C[0].size(); ++j) {
            std::cout << C[i][j] << " ";
        }
        std::cout << std::endl;
    }

    return 0;
}